{
	"name": "PL-Framework-FromFile-ToAzure",
	"properties": {
		"activities": [
			{
				"name": "SP-InitiateLog",
				"description": "Initiate the start of the Pipeline",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "UTIL.spPipelineExecutionInitiate",
					"storedProcedureParameters": {
						"DataFactoryName": {
							"value": {
								"value": "@pipeline().DataFactory",
								"type": "Expression"
							},
							"type": "String"
						},
						"PipelineName": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"RunID": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"Message": {
							"value": {
								"value": "@{pipeline().parameters.SourceFile}",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LinkedServiceTargetDatabase",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "LU-Metadata",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "SP-InitiateLog",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlSource",
						"sqlReaderQuery": {
							"value": "SELECT * FROM UTIL.[vDataLoadMetaData_FromFile_ToTable] WHERE SourceSystem = '@{pipeline().parameters.SourceSystem}' AND SourceFile = '@{pipeline().parameters.SourceFile}'",
							"type": "Expression"
						}
					},
					"dataset": {
						"referenceName": "DSDataLoadMetadata",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "IF-CopyData",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "AF-CheckFile",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@activity('AF-CheckFile').output.Exists",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "COPY-FileToStage",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "FileSystemSource",
									"recursive": true
								},
								"sink": {
									"type": "SqlSink",
									"writeBatchSize": 10000,
									"preCopyScript": {
										"value": "TRUNCATE TABLE @{activity('LU-Metadata').output.firstRow.TargetObject}",
										"type": "Expression"
									}
								},
								"enableStaging": false,
								"dataIntegrationUnits": 0
							},
							"inputs": [
								{
									"referenceName": "DSTextFileGeneral",
									"type": "DatasetReference",
									"parameters": {
										"columnDelimiter": {
											"value": "@{activity('LU-Metadata').output.firstRow.ColumnDelimiter}",
											"type": "Expression"
										},
										"rowDelimiter": {
											"value": "@{activity('LU-Metadata').output.firstRow.RowDelimiter}",
											"type": "Expression"
										},
										"firstRowAsHeader": {
											"value": "@{activity('LU-Metadata').output.firstRow.FirstRowHeader}",
											"type": "Expression"
										},
										"folderPath": {
											"value": "@{activity('LU-Metadata').output.firstRow.SourceFolder}",
											"type": "Expression"
										},
										"fileName": {
											"value": "@{activity('LU-Metadata').output.firstRow.SourceFile}",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DSDBSinkGeneral",
									"type": "DatasetReference",
									"parameters": {
										"SinkTableName": {
											"value": "@{activity('LU-Metadata').output.firstRow.TargetObject}",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Az-MoveFile",
							"type": "AzureFunctionActivity",
							"dependsOn": [
								{
									"activity": "COPY-FileToStage",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"functionName": {
									"value": "@concat('AzFnFileService?op=move&inputfolder=', activity('LU-Metadata').output.firstRow.SourceFolder, '&file=', activity('LU-Metadata').output.firstRow.SourceFile, '&targetfolder=', activity('LU-Metadata').output.firstRow.ArchiveFolder, '&PrefixDateTime=Y')",
									"type": "Expression"
								},
								"method": "GET"
							},
							"linkedServiceName": {
								"referenceName": "LinkedServiceAzureFunction",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "IF-SPTransformData",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "IF-CopyData",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@{and(not(equals(activity('LU-Metadata').output.firstRow.TransformationSP, '')), activity('LU-Metadata').output.firstRow.ExtractionFlag)}",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "SP-Transform",
							"description": "Load data to INT table",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": {
									"value": "@{activity('LU-Metadata').output.firstRow.TransformationSP}",
									"type": "Expression"
								}
							},
							"linkedServiceName": {
								"referenceName": "LinkedServiceTargetDatabase",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "SP-FinishLog",
				"description": "Initiate the end of the Pipeline",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "IF-SPTransformData",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "UTIL.spPipelineExecutionFinish",
					"storedProcedureParameters": {
						"RunID": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "Guid"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LinkedServiceTargetDatabase",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "AF-CheckFile",
				"type": "AzureFunctionActivity",
				"dependsOn": [
					{
						"activity": "LU-Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [
					{
						"name": "op",
						"value": "copy"
					}
				],
				"typeProperties": {
					"functionName": {
						"value": "@concat('AzFnFileService?op=exist&inputfolder=', activity('LU-Metadata').output.firstRow.SourceFolder, '&file=', activity('LU-Metadata').output.firstRow.SourceFile)",
						"type": "Expression"
					},
					"method": "GET",
					"body": ""
				},
				"linkedServiceName": {
					"referenceName": "LinkedServiceAzureFunction",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"SourceSystem": {
				"type": "String",
				"defaultValue": "Az-FileStorage"
			},
			"SourceFile": {
				"type": "String",
				"defaultValue": "AUS-State.csv"
			}
		},
		"folder": {
			"name": "Framework"
		},
		"annotations": []
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}